{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Items\nexport const fetchItems = params => axios.get(`${API_URL}/items`, {\n  params\n});\nexport const fetchItemById = id => axios.get(`${API_URL}/items/${id}`);\nexport const createItem = (itemData, token) => axios.post(`${API_URL}/items`, itemData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const updateItem = (id, itemData, token) => axios.put(`${API_URL}/items/${id}`, itemData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const deleteItem = (id, token) => axios.delete(`${API_URL}/items/${id}`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Orders\nexport const fetchOrders = token => axios.get(`${API_URL}/orders`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const createOrder = orderData => {\n  return axios.post(`${API_URL}/orders`, orderData).catch(error => {\n    console.error(\"Error creating order:\", error.response);\n    throw error;\n  });\n};\n\n// Check for axios interceptors or defaults that may add headers\naxios.interceptors.request.use(function (config) {\n  // Ensure Authorization header is not being set here\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n// Reviews\nexport const fetchReviewsForItem = itemId => axios.get(`${API_URL}/reviews/item/${itemId}`);\nexport const postReview = (reviewData, token) => axios.post(`${API_URL}/reviews`, reviewData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Users\nexport const registerUser = userData => axios.post(`${API_URL}/users/register`, userData);\nexport const loginUser = loginData => axios.post(`${API_URL}/users/login`, loginData);","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","fetchItems","params","get","fetchItemById","id","createItem","itemData","token","post","headers","Authorization","updateItem","put","deleteItem","delete","fetchOrders","createOrder","orderData","catch","error","console","response","interceptors","request","use","config","Promise","reject","fetchReviewsForItem","itemId","postReview","reviewData","registerUser","userData","loginUser","loginData"],"sources":["/Users/daniel/Desktop/OnlineClothingStore/client/src/services/ApiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Items\nexport const fetchItems = (params) => axios.get(`${API_URL}/items`, { params });\nexport const fetchItemById = (id) => axios.get(`${API_URL}/items/${id}`);\nexport const createItem = (itemData, token) => axios.post(`${API_URL}/items`, itemData, {\n    headers: { Authorization: `Bearer ${token}` }\n});\nexport const updateItem = (id, itemData, token) => axios.put(`${API_URL}/items/${id}`, itemData, {\n    headers: { Authorization: `Bearer ${token}` }\n});\nexport const deleteItem = (id, token) => axios.delete(`${API_URL}/items/${id}`, {\n    headers: { Authorization: `Bearer ${token}` }\n});\n\n// Orders\nexport const fetchOrders = (token) => axios.get(`${API_URL}/orders`, {\n    headers: { Authorization: `Bearer ${token}` }\n});\nexport const createOrder = (orderData) => {\n    return axios.post(`${API_URL}/orders`, orderData)\n        .catch(error => {\n            console.error(\"Error creating order:\", error.response);\n            throw error;\n        });\n};\n\n// Check for axios interceptors or defaults that may add headers\naxios.interceptors.request.use(function (config) {\n    // Ensure Authorization header is not being set here\n    return config;\n}, function (error) {\n    return Promise.reject(error);\n});\n\n\n// Reviews\nexport const fetchReviewsForItem = (itemId) => axios.get(`${API_URL}/reviews/item/${itemId}`);\nexport const postReview = (reviewData, token) => axios.post(`${API_URL}/reviews`, reviewData, {\n    headers: { Authorization: `Bearer ${token}` }\n});\n\n// Users\nexport const registerUser = (userData) => axios.post(`${API_URL}/users/register`, userData);\nexport const loginUser = (loginData) => axios.post(`${API_URL}/users/login`, loginData);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAKN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,QAAO,EAAE;EAAEK;AAAO,CAAC,CAAC;AAC/E,OAAO,MAAME,aAAa,GAAIC,EAAE,IAAKT,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,UAASQ,EAAG,EAAC,CAAC;AACxE,OAAO,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAKZ,KAAK,CAACa,IAAI,CAAE,GAAEZ,OAAQ,QAAO,EAAEU,QAAQ,EAAE;EACpFG,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASH,KAAM;EAAE;AAChD,CAAC,CAAC;AACF,OAAO,MAAMI,UAAU,GAAGA,CAACP,EAAE,EAAEE,QAAQ,EAAEC,KAAK,KAAKZ,KAAK,CAACiB,GAAG,CAAE,GAAEhB,OAAQ,UAASQ,EAAG,EAAC,EAAEE,QAAQ,EAAE;EAC7FG,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASH,KAAM;EAAE;AAChD,CAAC,CAAC;AACF,OAAO,MAAMM,UAAU,GAAGA,CAACT,EAAE,EAAEG,KAAK,KAAKZ,KAAK,CAACmB,MAAM,CAAE,GAAElB,OAAQ,UAASQ,EAAG,EAAC,EAAE;EAC5EK,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASH,KAAM;EAAE;AAChD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMQ,WAAW,GAAIR,KAAK,IAAKZ,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,SAAQ,EAAE;EACjEa,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASH,KAAM;EAAE;AAChD,CAAC,CAAC;AACF,OAAO,MAAMS,WAAW,GAAIC,SAAS,IAAK;EACtC,OAAOtB,KAAK,CAACa,IAAI,CAAE,GAAEZ,OAAQ,SAAQ,EAAEqB,SAAS,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,QAAQ,CAAC;IACtD,MAAMF,KAAK;EACf,CAAC,CAAC;AACV,CAAC;;AAED;AACAxB,KAAK,CAAC2B,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EAC7C;EACA,OAAOA,MAAM;AACjB,CAAC,EAAE,UAAUN,KAAK,EAAE;EAChB,OAAOO,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAChC,CAAC,CAAC;;AAGF;AACA,OAAO,MAAMS,mBAAmB,GAAIC,MAAM,IAAKlC,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,iBAAgBiC,MAAO,EAAC,CAAC;AAC7F,OAAO,MAAMC,UAAU,GAAGA,CAACC,UAAU,EAAExB,KAAK,KAAKZ,KAAK,CAACa,IAAI,CAAE,GAAEZ,OAAQ,UAAS,EAAEmC,UAAU,EAAE;EAC1FtB,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASH,KAAM;EAAE;AAChD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMyB,YAAY,GAAIC,QAAQ,IAAKtC,KAAK,CAACa,IAAI,CAAE,GAAEZ,OAAQ,iBAAgB,EAAEqC,QAAQ,CAAC;AAC3F,OAAO,MAAMC,SAAS,GAAIC,SAAS,IAAKxC,KAAK,CAACa,IAAI,CAAE,GAAEZ,OAAQ,cAAa,EAAEuC,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}