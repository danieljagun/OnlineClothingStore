{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Setup Axios interceptors to modify request configurations\naxios.interceptors.request.use(function (config) {\n  // Specify paths and conditions where the Authorization header should not be included\n  const noAuthNeeded = [{\n    method: 'GET',\n    path: '/items'\n  },\n  // No auth needed for getting items\n  {\n    method: 'POST',\n    path: '/orders'\n  } // Example for other endpoints\n  ];\n\n  // Check if the current request matches any of the conditions above\n  const isNoAuthNeeded = noAuthNeeded.some(rule => config.url.includes(rule.path) && config.method.toLowerCase() === rule.method.toLowerCase());\n  if (isNoAuthNeeded) {\n    console.log(\"Authorization header removed for specific request:\", config.url);\n    delete config.headers.Authorization;\n  }\n  return config;\n}, function (error) {\n  // Handle request error\n  return Promise.reject(error);\n});\n\n// Items\nexport const fetchItems = params => axios.get(`${API_URL}/items`, {\n  params\n});\nexport const fetchItemById = id => axios.get(`${API_URL}/items/${id}`);\nexport const createItem = (itemData, token) => {\n  return axios.post(`${API_URL}/items`, itemData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const updateItem = (id, itemData, token) => axios.put(`${API_URL}/items/${id}`, itemData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const deleteItem = (id, token) => axios.delete(`${API_URL}/items/${id}`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Orders\nexport const fetchOrders = token => axios.get(`${API_URL}/orders`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const createOrder = orderData => {\n  return axios.post(`${API_URL}/orders`, orderData).catch(error => {\n    console.error(\"Error creating order:\", error.response);\n    throw error;\n  });\n};\n\n// Reviews\nexport const fetchReviewsForItem = itemId => axios.get(`${API_URL}/reviews/item/${itemId}`);\nexport const postReview = (reviewData, token) => axios.post(`${API_URL}/reviews`, reviewData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Users\nexport const registerUser = userData => axios.post(`${API_URL}/users/register`, userData);\nexport const loginUser = loginData => axios.post(`${API_URL}/users/login`, loginData);","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","interceptors","request","use","config","noAuthNeeded","method","path","isNoAuthNeeded","some","rule","url","includes","toLowerCase","console","log","headers","Authorization","error","Promise","reject","fetchItems","params","get","fetchItemById","id","createItem","itemData","token","post","updateItem","put","deleteItem","delete","fetchOrders","createOrder","orderData","catch","response","fetchReviewsForItem","itemId","postReview","reviewData","registerUser","userData","loginUser","loginData"],"sources":["/Users/daniel/Desktop/OnlineClothingStore/client/src/services/ApiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Setup Axios interceptors to modify request configurations\naxios.interceptors.request.use(function (config) {\n    // Specify paths and conditions where the Authorization header should not be included\n    const noAuthNeeded = [\n        { method: 'GET', path: '/items' }, // No auth needed for getting items\n        { method: 'POST', path: '/orders' } // Example for other endpoints\n    ];\n\n    // Check if the current request matches any of the conditions above\n    const isNoAuthNeeded = noAuthNeeded.some(rule =>\n        config.url.includes(rule.path) && config.method.toLowerCase() === rule.method.toLowerCase()\n    );\n\n    if (isNoAuthNeeded) {\n        console.log(\"Authorization header removed for specific request:\", config.url);\n        delete config.headers.Authorization;\n    }\n\n    return config;\n}, function (error) {\n    // Handle request error\n    return Promise.reject(error);\n});\n\n// Items\nexport const fetchItems = (params) => axios.get(`${API_URL}/items`, { params });\nexport const fetchItemById = (id) => axios.get(`${API_URL}/items/${id}`);\nexport const createItem = (itemData, token) => {\n    return axios.post(`${API_URL}/items`, itemData, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n};\nexport const updateItem = (id, itemData, token) => axios.put(`${API_URL}/items/${id}`, itemData, {\n    headers: { Authorization: `Bearer ${token}` }\n});\nexport const deleteItem = (id, token) => axios.delete(`${API_URL}/items/${id}`, {\n    headers: { Authorization: `Bearer ${token}` }\n});\n\n// Orders\nexport const fetchOrders = (token) => axios.get(`${API_URL}/orders`, {\n    headers: { Authorization: `Bearer ${token}` }\n});\nexport const createOrder = (orderData) => {\n    return axios.post(`${API_URL}/orders`, orderData)\n        .catch(error => {\n            console.error(\"Error creating order:\", error.response);\n            throw error;\n        });\n};\n\n// Reviews\nexport const fetchReviewsForItem = (itemId) => axios.get(`${API_URL}/reviews/item/${itemId}`);\nexport const postReview = (reviewData, token) => axios.post(`${API_URL}/reviews`, reviewData, {\n    headers: { Authorization: `Bearer ${token}` }\n});\n\n// Users\nexport const registerUser = (userData) => axios.post(`${API_URL}/users/register`, userData);\nexport const loginUser = (loginData) => axios.post(`${API_URL}/users/login`, loginData);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}