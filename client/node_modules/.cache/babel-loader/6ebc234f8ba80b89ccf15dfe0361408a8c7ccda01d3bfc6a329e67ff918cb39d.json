{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nclass ApiService {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n  fetch(params) {\n    return axios.get(this.baseUrl, {\n      params\n    });\n  }\n  fetchById(id) {\n    return axios.get(`${this.baseUrl}/${id}`);\n  }\n  create(data, token) {\n    return axios.post(this.baseUrl, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  update(id, data, token) {\n    return axios.put(`${this.baseUrl}/${id}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  delete(id, token) {\n    return axios.delete(`${this.baseUrl}/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nclass ItemService extends ApiService {\n  constructor() {\n    super(`${API_URL}/items`);\n  }\n}\nclass OrderService extends ApiService {\n  constructor() {\n    super(`${API_URL}/orders`);\n  }\n}\nclass ReviewService extends ApiService {\n  constructor() {\n    super(`${API_URL}/reviews`);\n  }\n}\nclass UserService extends ApiService {\n  constructor() {\n    super(`${API_URL}/users`);\n  }\n}\nconst apiFactory = {\n  getService: function (type) {\n    switch (type) {\n      case 'items':\n        return new ItemService();\n      case 'orders':\n        return new OrderService();\n      case 'reviews':\n        return new ReviewService();\n      case 'users':\n        return new UserService();\n      default:\n        throw new Error('Unknown service type');\n    }\n  }\n};\nexport default apiFactory;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseUrl","fetch","params","get","fetchById","id","create","data","token","post","headers","Authorization","update","put","delete","ItemService","OrderService","ReviewService","UserService","apiFactory","getService","type","Error"],"sources":["/Users/daniel/Desktop/OnlineClothingStore/client/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nclass ApiService {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n\n    fetch(params) {\n        return axios.get(this.baseUrl, { params });\n    }\n\n    fetchById(id) {\n        return axios.get(`${this.baseUrl}/${id}`);\n    }\n\n    create(data, token) {\n        return axios.post(this.baseUrl, data, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n    }\n\n    update(id, data, token) {\n        return axios.put(`${this.baseUrl}/${id}`, data, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n    }\n\n    delete(id, token) {\n        return axios.delete(`${this.baseUrl}/${id}`, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n    }\n}\n\nclass ItemService extends ApiService {\n    constructor() {\n        super(`${API_URL}/items`);\n    }\n}\n\nclass OrderService extends ApiService {\n    constructor() {\n        super(`${API_URL}/orders`);\n    }\n}\n\nclass ReviewService extends ApiService {\n    constructor() {\n        super(`${API_URL}/reviews`);\n    }\n}\n\nclass UserService extends ApiService {\n    constructor() {\n        super(`${API_URL}/users`);\n    }\n}\n\nconst apiFactory = {\n    getService: function (type) {\n        switch (type) {\n            case 'items': return new ItemService();\n            case 'orders': return new OrderService();\n            case 'reviews': return new ReviewService();\n            case 'users': return new UserService();\n            default: throw new Error('Unknown service type');\n        }\n    }\n};\n\nexport default apiFactory;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EAEAC,KAAKA,CAACC,MAAM,EAAE;IACV,OAAOT,KAAK,CAACU,GAAG,CAAC,IAAI,CAACH,OAAO,EAAE;MAAEE;IAAO,CAAC,CAAC;EAC9C;EAEAE,SAASA,CAACC,EAAE,EAAE;IACV,OAAOZ,KAAK,CAACU,GAAG,CAAE,GAAE,IAAI,CAACH,OAAQ,IAAGK,EAAG,EAAC,CAAC;EAC7C;EAEAC,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAChB,OAAOf,KAAK,CAACgB,IAAI,CAAC,IAAI,CAACT,OAAO,EAAEO,IAAI,EAAE;MAClCG,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,KAAM;MAAE;IAChD,CAAC,CAAC;EACN;EAEAI,MAAMA,CAACP,EAAE,EAAEE,IAAI,EAAEC,KAAK,EAAE;IACpB,OAAOf,KAAK,CAACoB,GAAG,CAAE,GAAE,IAAI,CAACb,OAAQ,IAAGK,EAAG,EAAC,EAAEE,IAAI,EAAE;MAC5CG,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,KAAM;MAAE;IAChD,CAAC,CAAC;EACN;EAEAM,MAAMA,CAACT,EAAE,EAAEG,KAAK,EAAE;IACd,OAAOf,KAAK,CAACqB,MAAM,CAAE,GAAE,IAAI,CAACd,OAAQ,IAAGK,EAAG,EAAC,EAAE;MACzCK,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,KAAM;MAAE;IAChD,CAAC,CAAC;EACN;AACJ;AAEA,MAAMO,WAAW,SAASjB,UAAU,CAAC;EACjCC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAE,GAAEL,OAAQ,QAAO,CAAC;EAC7B;AACJ;AAEA,MAAMsB,YAAY,SAASlB,UAAU,CAAC;EAClCC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAE,GAAEL,OAAQ,SAAQ,CAAC;EAC9B;AACJ;AAEA,MAAMuB,aAAa,SAASnB,UAAU,CAAC;EACnCC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAE,GAAEL,OAAQ,UAAS,CAAC;EAC/B;AACJ;AAEA,MAAMwB,WAAW,SAASpB,UAAU,CAAC;EACjCC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAE,GAAEL,OAAQ,QAAO,CAAC;EAC7B;AACJ;AAEA,MAAMyB,UAAU,GAAG;EACfC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,QAAQA,IAAI;MACR,KAAK,OAAO;QAAE,OAAO,IAAIN,WAAW,CAAC,CAAC;MACtC,KAAK,QAAQ;QAAE,OAAO,IAAIC,YAAY,CAAC,CAAC;MACxC,KAAK,SAAS;QAAE,OAAO,IAAIC,aAAa,CAAC,CAAC;MAC1C,KAAK,OAAO;QAAE,OAAO,IAAIC,WAAW,CAAC,CAAC;MACtC;QAAS,MAAM,IAAII,KAAK,CAAC,sBAAsB,CAAC;IACpD;EACJ;AACJ,CAAC;AAED,eAAeH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}