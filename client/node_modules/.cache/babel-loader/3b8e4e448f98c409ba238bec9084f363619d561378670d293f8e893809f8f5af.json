{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OnlineClothingStore/client/src/context/authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  console.log('User from localStorage:', localStorage.getItem('user'));\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    isAuthenticated: false,\n    user: JSON.parse(localStorage.getItem('user') || 'null') // Corrected to parse 'null' if user is undefined\n  });\n  useEffect(() => {\n    // This effect does nothing if both token and user are not present\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: true,\n        user: JSON.parse(user) // Ensure this is safe to parse\n      }));\n    }\n  }, []);\n  const login = (token, user) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthState({\n      token,\n      isAuthenticated: true,\n      user\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthState({\n      token: null,\n      isAuthenticated: false,\n      user: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...authState,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"SakTRMhePn0N6nBjfTrYO8LllAU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","console","log","localStorage","getItem","authState","setAuthState","token","isAuthenticated","user","JSON","parse","prev","login","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/daniel/Desktop/OnlineClothingStore/client/src/context/authContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    console.log('User from localStorage:', localStorage.getItem('user'));\n    \n    const [authState, setAuthState] = useState({\n        token: localStorage.getItem('token') || null,\n        isAuthenticated: false,\n        user: JSON.parse(localStorage.getItem('user') || 'null')  // Corrected to parse 'null' if user is undefined\n    });\n\n    useEffect(() => {\n        // This effect does nothing if both token and user are not present\n        const token = localStorage.getItem('token');\n        const user = localStorage.getItem('user');\n\n        if (token && user) {\n            setAuthState(prev => ({\n                ...prev,\n                isAuthenticated: true,\n                user: JSON.parse(user) // Ensure this is safe to parse\n            }));\n        }\n    }, []);\n\n    const login = (token, user) => {\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setAuthState({\n            token,\n            isAuthenticated: true,\n            user\n        });\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setAuthState({\n            token: null,\n            isAuthenticated: false,\n            user: null\n        });\n    };\n\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1CC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEpE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC;IACvCc,KAAK,EAAEJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;IAC5CI,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACR,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAE;EAC9D,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMK,IAAI,GAAGN,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzC,IAAIG,KAAK,IAAIE,IAAI,EAAE;MACfH,YAAY,CAACM,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPJ,eAAe,EAAE,IAAI;QACrBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;MAC3B,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAGA,CAACN,KAAK,EAAEE,IAAI,KAAK;IAC3BN,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;IACpCJ,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACN,IAAI,CAAC,CAAC;IAClDH,YAAY,CAAC;MACTC,KAAK;MACLC,eAAe,EAAE,IAAI;MACrBC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACjBb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCd,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;IAC/BX,YAAY,CAAC;MACTC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED,oBACIb,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGd,SAAS;MAAEQ,KAAK;MAAEG;IAAO,CAAE;IAAAjB,QAAA,EACxDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAhDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkDzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACK,WAAW,CAAC;AAAA;AAAC6B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}