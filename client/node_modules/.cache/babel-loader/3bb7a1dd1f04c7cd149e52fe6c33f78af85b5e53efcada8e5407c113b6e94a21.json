{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OnlineClothingStore/client/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        items: [...state.items, {\n          ...action.payload,\n          quantity: 1\n        }]\n      };\n    case 'INCREASE_QUANTITY':\n      return {\n        ...state,\n        items: state.items.map(item => item._id === action.payload ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item)\n      };\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case 'CLEAR_CART':\n      return {\n        items: []\n      };\n    default:\n      return state;\n  }\n};\nconst initializeCart = () => {\n  return {\n    items: []\n  };\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initializeCart());\n  const addItem = item => {\n    // Check if the item is already in the cart\n    const itemExists = state.items.find(i => i._id === item._id);\n    if (itemExists) {\n      dispatch({\n        type: 'INCREASE_QUANTITY',\n        payload: item._id\n      });\n    } else {\n      // If it does not exist, add the item with quantity 1\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: {\n          ...item,\n          quantity: 1\n        }\n      });\n    }\n  };\n  const removeItem = itemId => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: itemId\n    });\n  };\n  const clearCart = () => dispatch({\n    type: 'CLEAR_CART'\n  });\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state,\n      addItem,\n      removeItem,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"5G1VMN9kOrzq+b7xtJFCX4mGbLU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","items","payload","quantity","map","item","_id","filter","initializeCart","CartProvider","children","_s","dispatch","addItem","itemExists","find","i","removeItem","itemId","clearCart","Provider","value","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["/Users/daniel/Desktop/OnlineClothingStore/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nconst CartContext = createContext();\n\nconst cartReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_ITEM':\n            return {...state, items: [...state.items, {...action.payload, quantity: 1}]};\n        case 'INCREASE_QUANTITY':\n            return {\n                ...state,\n                items: state.items.map(item =>\n                    item._id === action.payload ? { ...item, quantity: item.quantity + 1 } : item\n                ),\n            };\n        case 'REMOVE_ITEM':\n            return {\n                ...state,\n                items: state.items.filter(item => item._id !== action.payload),\n            };\n        case 'CLEAR_CART':\n            return { items: [] };\n        default:\n            return state;\n    }\n};\n\nconst initializeCart = () => {\n    return { items: [] };\n};\n\nexport const CartProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(cartReducer, initializeCart());\n\n    const addItem = (item) => {\n        // Check if the item is already in the cart\n        const itemExists = state.items.find((i) => i._id === item._id);\n        if (itemExists) {\n            dispatch({\n                type: 'INCREASE_QUANTITY',\n                payload: item._id\n            });\n        } else {\n            // If it does not exist, add the item with quantity 1\n            dispatch({\n                type: 'ADD_ITEM',\n                payload: { ...item, quantity: 1 }\n            });\n        }\n    };\n    const removeItem = (itemId) => {\n        dispatch({ type: 'REMOVE_ITEM', payload: itemId });\n    };\n    const clearCart = () => dispatch({ type: 'CLEAR_CART' });\n\n    return (\n        <CartContext.Provider value={{ cart: state, addItem, removeItem, clearCart }}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport const useCart = () => useContext(CartContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,UAAU;MACX,OAAO;QAAC,GAAGF,KAAK;QAAEG,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAK,EAAE;UAAC,GAAGF,MAAM,CAACG,OAAO;UAAEC,QAAQ,EAAE;QAAC,CAAC;MAAC,CAAC;IAChF,KAAK,mBAAmB;MACpB,OAAO;QACH,GAAGL,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACG,GAAG,CAACC,IAAI,IACvBA,IAAI,CAACC,GAAG,KAAKP,MAAM,CAACG,OAAO,GAAG;UAAE,GAAGG,IAAI;UAAEF,QAAQ,EAAEE,IAAI,CAACF,QAAQ,GAAG;QAAE,CAAC,GAAGE,IAC7E;MACJ,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGP,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACM,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKP,MAAM,CAACG,OAAO;MACjE,CAAC;IACL,KAAK,YAAY;MACb,OAAO;QAAED,KAAK,EAAE;MAAG,CAAC;IACxB;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,MAAMU,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAO;IAAEP,KAAK,EAAE;EAAG,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACb,KAAK,EAAEc,QAAQ,CAAC,GAAGnB,UAAU,CAACI,WAAW,EAAEW,cAAc,CAAC,CAAC,CAAC;EAEnE,MAAMK,OAAO,GAAIR,IAAI,IAAK;IACtB;IACA,MAAMS,UAAU,GAAGhB,KAAK,CAACG,KAAK,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACV,GAAG,KAAKD,IAAI,CAACC,GAAG,CAAC;IAC9D,IAAIQ,UAAU,EAAE;MACZF,QAAQ,CAAC;QACLZ,IAAI,EAAE,mBAAmB;QACzBE,OAAO,EAAEG,IAAI,CAACC;MAClB,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACAM,QAAQ,CAAC;QACLZ,IAAI,EAAE,UAAU;QAChBE,OAAO,EAAE;UAAE,GAAGG,IAAI;UAAEF,QAAQ,EAAE;QAAE;MACpC,CAAC,CAAC;IACN;EACJ,CAAC;EACD,MAAMc,UAAU,GAAIC,MAAM,IAAK;IAC3BN,QAAQ,CAAC;MAAEZ,IAAI,EAAE,aAAa;MAAEE,OAAO,EAAEgB;IAAO,CAAC,CAAC;EACtD,CAAC;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAMP,QAAQ,CAAC;IAAEZ,IAAI,EAAE;EAAa,CAAC,CAAC;EAExD,oBACIL,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAExB,KAAK;MAAEe,OAAO;MAAEI,UAAU;MAAEE;IAAU,CAAE;IAAAT,QAAA,EACxEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACf,EAAA,CA7BWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA+BzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACI,WAAW,CAAC;AAAA;AAACiC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}